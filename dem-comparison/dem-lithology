#!/usr/bin/env python

import rasterio
from pathlib import Path
from geopandas import GeoDataFrame
from database import db
from image_files import DEM
from rasterio.features import geometry_mask
from matplotlib.pyplot import subplots
import numpy as N
import seaborn as sns

# Get polygon geometries

file = Path(__file__)
build_dir = file.with_name('build')

with (file.parent/'feature-geometry.sql').open('r') as f:
    sql = f.read()

df = GeoDataFrame.from_postgis(sql, db)
# Build feature raster

with rasterio.open(str(DEM),'r') as img:
    imdata = img.read(1,masked=True)

    def get_values(geom):
        mask = geometry_mask(geom,img.shape,
                    img.transform,invert=True)
        return imdata[mask==True].compressed()

    df['array'] = df.geom.map(get_values)

for i,d in df.iterrows():
    n = len(d.array)
    t = d.unit_id.strip()
    μ = d.array.mean()
    σ = d.array.std()
    print(f"{t}: {n} records, μ {μ}, σ {σ}")

fig, ax = subplots()
ax.hist(df.array, bins=N.linspace(-1,1,1000),
        histtype='step',
        label=df.unit_id.str.strip(),
        color=df.color.str.strip(),
        alpha=0.9)
fn = str(build_dir/'dem-lithology.pdf')

ax.set_ylabel("Area (pixels)")
ax.set_xlabel("Elevation (m)")
ax.set_xlim(-1,1)
ax.legend()

fig.savefig(fn)

